// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file service.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
/**
 * @generated from enum Quantum
 */
export var Quantum;
(function (Quantum) {
    /**
     * @generated from enum value: Length = 0;
     */
    Quantum[Quantum["Length"] = 0] = "Length";
})(Quantum || (Quantum = {}));
// Retrieve enum metadata with: proto3.getEnumType(Quantum)
proto3.util.setEnumType(Quantum, "Quantum", [
    { no: 0, name: "Length" },
]);
/**
 * @generated from enum Metric
 */
export var Metric;
(function (Metric) {
    /**
     * @generated from enum value: LATENCY = 0;
     */
    Metric[Metric["LATENCY"] = 0] = "LATENCY";
    /**
     * @generated from enum value: PACKET_LOSS = 1;
     */
    Metric[Metric["PACKET_LOSS"] = 1] = "PACKET_LOSS";
    /**
     * @generated from enum value: JITTER = 2;
     */
    Metric[Metric["JITTER"] = 2] = "JITTER";
})(Metric || (Metric = {}));
// Retrieve enum metadata with: proto3.getEnumType(Metric)
proto3.util.setEnumType(Metric, "Metric", [
    { no: 0, name: "LATENCY" },
    { no: 1, name: "PACKET_LOSS" },
    { no: 2, name: "JITTER" },
]);
/**
 * @generated from enum Statistic
 */
export var Statistic;
(function (Statistic) {
    /**
     * @generated from enum value: MIN = 0;
     */
    Statistic[Statistic["MIN"] = 0] = "MIN";
    /**
     * @generated from enum value: AVG = 1;
     */
    Statistic[Statistic["AVG"] = 1] = "AVG";
    /**
     * @generated from enum value: MAX = 2;
     */
    Statistic[Statistic["MAX"] = 2] = "MAX";
    /**
     * @generated from enum value: P90 = 3;
     */
    Statistic[Statistic["P90"] = 3] = "P90";
    /**
     * @generated from enum value: P99 = 4;
     */
    Statistic[Statistic["P99"] = 4] = "P99";
    /**
     * @generated from enum value: SUM = 5;
     */
    Statistic[Statistic["SUM"] = 5] = "SUM";
    /**
     * @generated from enum value: COUNT = 6;
     */
    Statistic[Statistic["COUNT"] = 6] = "COUNT";
})(Statistic || (Statistic = {}));
// Retrieve enum metadata with: proto3.getEnumType(Statistic)
proto3.util.setEnumType(Statistic, "Statistic", [
    { no: 0, name: "MIN" },
    { no: 1, name: "AVG" },
    { no: 2, name: "MAX" },
    { no: 3, name: "P90" },
    { no: 4, name: "P99" },
    { no: 5, name: "SUM" },
    { no: 6, name: "COUNT" },
]);
/**
 * @generated from message StartPingingRequest
 */
export class StartPingingRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new StartPingingRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new StartPingingRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new StartPingingRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(StartPingingRequest, a, b);
    }
}
StartPingingRequest.runtime = proto3;
StartPingingRequest.typeName = "StartPingingRequest";
StartPingingRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "target", kind: "message", T: PingTarget },
]);
/**
 * @generated from message PingTarget
 */
export class PingTarget extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string target = 1;
         */
        this.target = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PingTarget().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PingTarget().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PingTarget().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PingTarget, a, b);
    }
}
PingTarget.runtime = proto3;
PingTarget.typeName = "PingTarget";
PingTarget.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "target", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message PingGroupSummaryPublic
 */
export class PingGroupSummaryPublic extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string target = 3;
         */
        this.target = "";
        /**
         * @generated from field: int32 minimumPing = 4;
         */
        this.minimumPing = 0;
        /**
         * @generated from field: float averagePing = 5;
         */
        this.averagePing = 0;
        /**
         * @generated from field: int32 maximumPing = 6;
         */
        this.maximumPing = 0;
        /**
         * @generated from field: float jitter = 7;
         */
        this.jitter = 0;
        /**
         * @generated from field: float packetLoss = 8;
         */
        this.packetLoss = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PingGroupSummaryPublic().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PingGroupSummaryPublic().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PingGroupSummaryPublic().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PingGroupSummaryPublic, a, b);
    }
}
PingGroupSummaryPublic.runtime = proto3;
PingGroupSummaryPublic.typeName = "PingGroupSummaryPublic";
PingGroupSummaryPublic.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "start", kind: "message", T: Timestamp },
    { no: 2, name: "end", kind: "message", T: Timestamp },
    { no: 3, name: "target", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "minimumPing", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "averagePing", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 6, name: "maximumPing", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "jitter", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 8, name: "packetLoss", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 9, name: "terminatingIPStatusExplanation", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "lastAbnormalStatusExplanation", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
]);
/**
 * @generated from message PingResultPublic
 */
export class PingResultPublic extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: int32 rtt = 3;
         */
        this.rtt = 0;
        /**
         * @generated from field: string target = 4;
         */
        this.target = "";
        /**
         * @generated from field: string targetType = 5;
         */
        this.targetType = "";
        /**
         * @generated from field: string ipStatus = 6;
         */
        this.ipStatus = "";
        /**
         * @generated from field: int32 ttl = 7;
         */
        this.ttl = 0;
        /**
         * @generated from field: string replyAddress = 8;
         */
        this.replyAddress = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new PingResultPublic().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new PingResultPublic().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new PingResultPublic().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(PingResultPublic, a, b);
    }
}
PingResultPublic.runtime = proto3;
PingResultPublic.typeName = "PingResultPublic";
PingResultPublic.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "start", kind: "message", T: Timestamp },
    { no: 2, name: "end", kind: "message", T: Timestamp },
    { no: 3, name: "rtt", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "target", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "targetType", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "ipStatus", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "ttl", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "replyAddress", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message ShowPingsRequest
 */
export class ShowPingsRequest extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShowPingsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShowPingsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShowPingsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ShowPingsRequest, a, b);
    }
}
ShowPingsRequest.runtime = proto3;
ShowPingsRequest.typeName = "ShowPingsRequest";
ShowPingsRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "target", kind: "message", T: PingTarget },
    { no: 2, name: "startingTime", kind: "message", T: Timestamp },
    { no: 3, name: "endingTime", kind: "message", T: Timestamp },
]);
/**
 * @generated from message ShowPingsResponse
 */
export class ShowPingsResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated PingGroupSummaryPublic pings = 1;
         */
        this.pings = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ShowPingsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ShowPingsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ShowPingsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ShowPingsResponse, a, b);
    }
}
ShowPingsResponse.runtime = proto3;
ShowPingsResponse.typeName = "ShowPingsResponse";
ShowPingsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pings", kind: "message", T: PingGroupSummaryPublic, repeated: true },
]);
/**
 * @generated from message ListPingsRequest
 */
export class ListPingsRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: Metric metric = 5;
         */
        this.metric = Metric.LATENCY;
        /**
         * @generated from field: Statistic statistic = 6;
         */
        this.statistic = Statistic.MIN;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListPingsRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListPingsRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListPingsRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ListPingsRequest, a, b);
    }
}
ListPingsRequest.runtime = proto3;
ListPingsRequest.typeName = "ListPingsRequest";
ListPingsRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "startingTime", kind: "message", T: Timestamp },
    { no: 2, name: "endingTime", kind: "message", T: Timestamp },
    { no: 4, name: "pingTarget", kind: "message", T: PingTarget },
    { no: 5, name: "metric", kind: "enum", T: proto3.getEnumType(Metric) },
    { no: 6, name: "statistic", kind: "enum", T: proto3.getEnumType(Statistic) },
    { no: 7, name: "quantum", kind: "enum", T: proto3.getEnumType(Quantum), opt: true },
]);
/**
 * @generated from message ListPingsDatapoint
 */
export class ListPingsDatapoint extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: double Value = 2;
         */
        this.Value = 0;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListPingsDatapoint().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListPingsDatapoint().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListPingsDatapoint().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ListPingsDatapoint, a, b);
    }
}
ListPingsDatapoint.runtime = proto3;
ListPingsDatapoint.typeName = "ListPingsDatapoint";
ListPingsDatapoint.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "Timestamp", kind: "message", T: Timestamp },
    { no: 2, name: "Value", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
]);
/**
 * @generated from message ListPingsResponse
 */
export class ListPingsResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated ListPingsDatapoint datapoints = 1;
         */
        this.datapoints = [];
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListPingsResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListPingsResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListPingsResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ListPingsResponse, a, b);
    }
}
ListPingsResponse.runtime = proto3;
ListPingsResponse.typeName = "ListPingsResponse";
ListPingsResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "datapoints", kind: "message", T: ListPingsDatapoint, repeated: true },
]);
/**
 * @generated from message ListAnomaliesRequest
 */
export class ListAnomaliesRequest extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: uint32 numberRequested = 1;
         */
        this.numberRequested = 0;
        /**
         * @generated from field: string paginationToken = 2;
         */
        this.paginationToken = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListAnomaliesRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListAnomaliesRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListAnomaliesRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ListAnomaliesRequest, a, b);
    }
}
ListAnomaliesRequest.runtime = proto3;
ListAnomaliesRequest.typeName = "ListAnomaliesRequest";
ListAnomaliesRequest.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "numberRequested", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "paginationToken", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pingTarget", kind: "message", T: PingTarget, opt: true },
]);
/**
 * @generated from message ListAnomaliesResponse
 */
export class ListAnomaliesResponse extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated PingGroupSummaryPublic anomalies = 1;
         */
        this.anomalies = [];
        /**
         * @generated from field: string paginationToken = 2;
         */
        this.paginationToken = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ListAnomaliesResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ListAnomaliesResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ListAnomaliesResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ListAnomaliesResponse, a, b);
    }
}
ListAnomaliesResponse.runtime = proto3;
ListAnomaliesResponse.typeName = "ListAnomaliesResponse";
ListAnomaliesResponse.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "anomalies", kind: "message", T: PingGroupSummaryPublic, repeated: true },
    { no: 2, name: "paginationToken", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message ServerEvent
 */
export class ServerEvent extends Message {
    constructor(data) {
        super();
        /**
         * @generated from oneof ServerEvent.ServerEvent
         */
        this.ServerEvent = { case: undefined };
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ServerEvent().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ServerEvent().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ServerEvent().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ServerEvent, a, b);
    }
}
ServerEvent.runtime = proto3;
ServerEvent.typeName = "ServerEvent";
ServerEvent.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "eventTime", kind: "message", T: Timestamp },
    { no: 100, name: "pingOnOffToggle", kind: "message", T: ServerEvent_PingOnOffToggle, oneof: "ServerEvent" },
    { no: 101, name: "pingAnomaly", kind: "message", T: ServerEvent_PingAnomaly, oneof: "ServerEvent" },
    { no: 102, name: "pingInfo", kind: "message", T: ServerEvent_PingInfo, oneof: "ServerEvent" },
    { no: 190, name: "pingAgentError", kind: "message", T: ServerEvent_PingAgentError, oneof: "ServerEvent" },
]);
/**
 * @generated from message ServerEvent.PingOnOffToggle
 */
export class ServerEvent_PingOnOffToggle extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: bool active = 2;
         */
        this.active = false;
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ServerEvent_PingOnOffToggle().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ServerEvent_PingOnOffToggle().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ServerEvent_PingOnOffToggle().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ServerEvent_PingOnOffToggle, a, b);
    }
}
ServerEvent_PingOnOffToggle.runtime = proto3;
ServerEvent_PingOnOffToggle.typeName = "ServerEvent.PingOnOffToggle";
ServerEvent_PingOnOffToggle.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pingTarget", kind: "message", T: PingTarget },
    { no: 2, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
]);
/**
 * @generated from message ServerEvent.PingAnomaly
 */
export class ServerEvent_PingAnomaly extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string anomalyDescription = 2;
         */
        this.anomalyDescription = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ServerEvent_PingAnomaly().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ServerEvent_PingAnomaly().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ServerEvent_PingAnomaly().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ServerEvent_PingAnomaly, a, b);
    }
}
ServerEvent_PingAnomaly.runtime = proto3;
ServerEvent_PingAnomaly.typeName = "ServerEvent.PingAnomaly";
ServerEvent_PingAnomaly.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pingTarget", kind: "message", T: PingTarget },
    { no: 2, name: "anomalyDescription", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message ServerEvent.PingAgentError
 */
export class ServerEvent_PingAgentError extends Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string errorDescription = 2;
         */
        this.errorDescription = "";
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ServerEvent_PingAgentError().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ServerEvent_PingAgentError().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ServerEvent_PingAgentError().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ServerEvent_PingAgentError, a, b);
    }
}
ServerEvent_PingAgentError.runtime = proto3;
ServerEvent_PingAgentError.typeName = "ServerEvent.PingAgentError";
ServerEvent_PingAgentError.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pingTarget", kind: "message", T: PingTarget },
    { no: 2, name: "errorDescription", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message ServerEvent.PingInfo
 */
export class ServerEvent_PingInfo extends Message {
    constructor(data) {
        super();
        proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ServerEvent_PingInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ServerEvent_PingInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ServerEvent_PingInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return proto3.util.equals(ServerEvent_PingInfo, a, b);
    }
}
ServerEvent_PingInfo.runtime = proto3;
ServerEvent_PingInfo.typeName = "ServerEvent.PingInfo";
ServerEvent_PingInfo.fields = proto3.util.newFieldList(() => [
    { no: 1, name: "pingTarget", kind: "message", T: PingTarget },
]);
