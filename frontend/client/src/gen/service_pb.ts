// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file service.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message PingTarget
 */
export class PingTarget extends Message<PingTarget> {
  /**
   * @generated from field: string target = 1;
   */
  target = "";

  constructor(data?: PartialMessage<PingTarget>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "PingTarget";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "target", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PingTarget {
    return new PingTarget().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PingTarget {
    return new PingTarget().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PingTarget {
    return new PingTarget().fromJsonString(jsonString, options);
  }

  static equals(a: PingTarget | PlainMessage<PingTarget> | undefined, b: PingTarget | PlainMessage<PingTarget> | undefined): boolean {
    return proto3.util.equals(PingTarget, a, b);
  }
}

/**
 * @generated from message PingGroupSummaryPublic
 */
export class PingGroupSummaryPublic extends Message<PingGroupSummaryPublic> {
  /**
   * @generated from field: google.protobuf.Timestamp start = 1;
   */
  start?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end = 2;
   */
  end?: Timestamp;

  /**
   * @generated from field: string target = 3;
   */
  target = "";

  /**
   * @generated from field: int32 minimumPing = 4;
   */
  minimumPing = 0;

  /**
   * @generated from field: float averagePing = 5;
   */
  averagePing = 0;

  /**
   * @generated from field: int32 maximumPing = 6;
   */
  maximumPing = 0;

  /**
   * @generated from field: float jitter = 7;
   */
  jitter = 0;

  /**
   * @generated from field: float packetLoss = 8;
   */
  packetLoss = 0;

  /**
   * @generated from field: optional int32 terminatingIPStatus = 9;
   */
  terminatingIPStatus?: number;

  /**
   * @generated from field: optional int32 lastAbnormalStatus = 10;
   */
  lastAbnormalStatus?: number;

  constructor(data?: PartialMessage<PingGroupSummaryPublic>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "PingGroupSummaryPublic";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "start", kind: "message", T: Timestamp },
    { no: 2, name: "end", kind: "message", T: Timestamp },
    { no: 3, name: "target", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "minimumPing", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "averagePing", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 6, name: "maximumPing", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "jitter", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 8, name: "packetLoss", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 9, name: "terminatingIPStatus", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 10, name: "lastAbnormalStatus", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PingGroupSummaryPublic {
    return new PingGroupSummaryPublic().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PingGroupSummaryPublic {
    return new PingGroupSummaryPublic().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PingGroupSummaryPublic {
    return new PingGroupSummaryPublic().fromJsonString(jsonString, options);
  }

  static equals(a: PingGroupSummaryPublic | PlainMessage<PingGroupSummaryPublic> | undefined, b: PingGroupSummaryPublic | PlainMessage<PingGroupSummaryPublic> | undefined): boolean {
    return proto3.util.equals(PingGroupSummaryPublic, a, b);
  }
}

